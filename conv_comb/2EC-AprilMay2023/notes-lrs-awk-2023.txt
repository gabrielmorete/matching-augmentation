
the awk-program
	gen-lrs-2ec-nored.awk
 generates an input file for LRS (in the format: H-representation) when it is given a text file describing 
an instance of FAP

usage:
	awk -f gen-lrs-2ec-nored.awk input_file > output_file

IMPORTANT: please edit output_file and *move* its last line to the line "0 0 rational ..."
	that is, the line "0 0 rational ..." must be replaced by the last line

then run LRS on the resulting file, e.g.,

lrs revised_output_file > lrsout_file

-----

as an example, an example with 9 links and 2 trees is in the file
	fap-10n-9links-for-lrs.txt

note the format of this file (lines starting with "*" are comments)
	there is a line "Nnodes 10" -- specify the number of nodes
	there are lines of the form "zero-edges i,j ..." -- specify the zero-edges of FAP
	there are lines of the form "edges i,j ..." -- specify the links of FAP
	(the prefix words "Nnodes" "edges" "zero-edges" must match!)


these lines can come in any order, but it is useful to specify out-links before in-links

each link (NONzero-edge) corresponds to a variable, and there is a "column" for each var

the following commands were used:

awk -f gen-lrs-2ec-nored.awk fap-10n-9links-for-lrs.txt > fap-10n-9links-for-lrs.hrep

edited the output file to handle its last line, and then

./lrs fap-10n-9links-for-lrs.hrep > fap-10n-9links-for-lrs.vrep

note that the .vrep file has 121 extreme points, but except for one, each of them has some variable = 1; 
the only exception is an extreme point with values of 2/5 on the out-links and 3/5 on the 
in-links

also, note that the .hrep file has the line
	35 10 rational
 this was the last line of file output by the awk program ... the 2nd item is (1+ #variables), so we have 
9 variables for the 9 links, and the 1st item is #constraints; if we have n variables, we always have 2n 
bounds constraints 0<= x_j <=1, so this example of FAP has 17 other constraints;
 there is one constraint with RHS=2, that is, x(\delta(S))>=2, and there are 2 constraints corresponding 
to each zero-edge (or leaf-node), e.g., the zero-edge {9,2} gives two constraints x(\delta{2})>=1 and 
x(\delta(S))>=1 where S={2,3,4,7,8,10}
 the awk program avoids listing both the cuts \delta(S) and \delta(V-S), and for this, it never outputs a 
cut \delta(S) such that node "1" is in S

getting further info from the awk program:
 lines 126-129 of the awk program are commented out with a leading "#"
 if you "uncomment" these lines (delete the "#") then the program will list the node-set of S for each 
cut-constraint x(\delta(S))>=... and that way you can check the details for any of the constraint-lines

=====
